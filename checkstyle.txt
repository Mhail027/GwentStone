Starting audit...
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/main/Main.java:82:13: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:3:8: Unused import - cards.GameCard. [UnusedImports]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:7:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:11:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:11:28: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:11:43: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:16:9: Class 'PlayerHero' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerHero' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:20:9: Class 'PlayerHero' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerHero' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:24:9: Class 'PlayerHero' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerHero' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:24:34: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:28:9: Class 'PlayerHero' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerHero' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:32:9: Class 'PlayerHero' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerHero' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerHero.java:32:31: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:8:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:10:27: '<' is preceded with whitespace. [GenericWhitespace]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:12:27: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:12:42: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:17:9: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:21:9: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:25:9: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'setPlayerIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'setPlayerIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:25:34: Parameter playerIdx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:29:9: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:33:9: Class 'PlayerDeck' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerDeck' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerDeck.java:33:31: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:4:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:7:27: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:7:28: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:11:9: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'getCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'getCommand' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:15:9: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'getOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'getOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:19:9: Class 'PlayerTurn' looks like designed for extension (can be subclassed), but the method 'setOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PlayerTurn' final or making the method 'setOutput' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/PlayerTurn.java:19:31: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/Action.java:112:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/Action.java:112:24: Parameter currGame should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/Action.java:112:39: Parameter output should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/Action.java:116:9: 'switch' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/actions/Action.java:116:9: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:5:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:11:21: Parameter card should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:16:5: Class 'GameCard' looks like designed for extension (can be subclassed), but the method 'getAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameCard' final or making the method 'getAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:20:5: Class 'GameCard' looks like designed for extension (can be subclassed), but the method 'setAttackDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameCard' final or making the method 'setAttackDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/GameCard.java:24:5: Class 'GameCard' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameCard' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:15:21: Parameter card should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:23:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:27:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:31:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:35:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setHealth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setHealth' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:39:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:43:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setDescription' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:47:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:51:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setColors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setColors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:55:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:59:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/Card.java:63:9: Class 'Card' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Card' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/HeroCard.java:3:8: Unused import - java.util.ArrayList. [UnusedImports]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/HeroCard.java:5:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/HeroCard.java:6:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/cards/HeroCard.java:8:26: '30' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:13:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:15:47: '3' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:16:51: '4' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:16:54: '5' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:18:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayerTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayerTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:18:34: '(' is preceded with whitespace. [MethodParamPad]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:22:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'getPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'getPlayer' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:22:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:22:33: Parameter idx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:26:21: Parameter inputData should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:26:38: Parameter startGameData should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:31: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:36: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:51:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'startCurrRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'startCurrRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:51:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:53:40: 'typecast' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:54:17: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:54:36: '10' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:55:41: '10' is a magic number. [MagicNumber]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:71:9: Class 'Game' looks like designed for extension (can be subclassed), but the method 'goNextTurn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'goNextTurn' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Game.java:71:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:9:1: File contains tab characters (this is the first instance). [FileTabCharacter]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:15:23: Parameter idx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:15:32: Parameter tableDeck should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:15:63: Parameter herro should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:20:17: 'for' construct must use '{}'s. [NeedBraces]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:25:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:29:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setIdx' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setIdx' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:29:28: Parameter idx should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:33:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:37:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:37:29: Parameter mana should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:41:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addMana' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addMana' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:41:9: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:41:29: Parameter receivedMana should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:45:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHandDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHandDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:49:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHandDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHandDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:49:33: Parameter handDeck should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:53:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getTableDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getTableDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:57:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setTableDeck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setTableDeck' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:57:34: Parameter tableDeck should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:61:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHerro' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHerro' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:65:9: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHerro' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHerro' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/gameprogress/Player.java:65:30: Parameter herro should be final. [FinalParameters]
[ERROR] /home/necula-mihail/Desktop/Anul2/Semestrul1/POO/oop-assigment/./src/fileio/StartGameInput.java:3:8: Unused import - cards.GameCard. [UnusedImports]
Audit done.
Checkstyle ends with 104 errors.
